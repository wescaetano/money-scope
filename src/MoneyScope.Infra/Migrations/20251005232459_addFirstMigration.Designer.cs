// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoneyScope.Infra.Context;

#nullable disable

namespace MoneyScope.Infra.Migrations
{
    [DbContext(typeof(MoneyScopeContext))]
    [Migration("20251005232459_addFirstMigration")]
    partial class addFirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MoneyScope.Domain.AccessProfile.Module", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Edit")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Exclude")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("ExclusionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Inactivate")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Register")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Visualize")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Modules");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Edit = true,
                            Exclude = true,
                            Inactivate = true,
                            Name = "Users",
                            Register = true,
                            Visualize = true
                        });
                });

            modelBuilder.Entity("MoneyScope.Domain.AccessProfile.Profile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ExclusionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Admin",
                            Status = 1
                        },
                        new
                        {
                            Id = 2L,
                            Name = "User",
                            Status = 1
                        });
                });

            modelBuilder.Entity("MoneyScope.Domain.AccessProfile.ProfileModule", b =>
                {
                    b.Property<long>("ModuleId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProfileId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Edit")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Exclude")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Inactivate")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Register")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Visualize")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("ModuleId", "ProfileId");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfilesModules", (string)null);

                    b.HasData(
                        new
                        {
                            ModuleId = 1L,
                            ProfileId = 1L,
                            Edit = true,
                            Exclude = true,
                            Inactivate = true,
                            Register = true,
                            Visualize = true
                        },
                        new
                        {
                            ModuleId = 1L,
                            ProfileId = 2L,
                            Edit = true,
                            Exclude = false,
                            Inactivate = true,
                            Register = true,
                            Visualize = true
                        });
                });

            modelBuilder.Entity("MoneyScope.Domain.AccessProfile.ProfileUser", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProfileId")
                        .HasColumnType("bigint");

                    b.HasKey("UserId", "ProfileId");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfilesUsers", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1L,
                            ProfileId = 1L
                        });
                });

            modelBuilder.Entity("MoneyScope.Domain.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ExclusionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("ProviderId")
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("0 =  Intivo,  1 = Ativo");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreationDate = new DateTime(2025, 10, 5, 23, 24, 59, 357, DateTimeKind.Utc).AddTicks(1326),
                            Email = "admin@admin.com",
                            Name = "Admin",
                            Password = "$2a$15$5DxGdsCvuzHVigXWk8Qr1uvoizMNxrdxz6SypelRVxC7n1D9uHB7.",
                            Status = 1
                        });
                });

            modelBuilder.Entity("MoneyScope.Domain.AccessProfile.ProfileModule", b =>
                {
                    b.HasOne("MoneyScope.Domain.AccessProfile.Module", "Module")
                        .WithMany("ProfilesModules")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoneyScope.Domain.AccessProfile.Profile", "Profile")
                        .WithMany("ProfilesModules")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("MoneyScope.Domain.AccessProfile.ProfileUser", b =>
                {
                    b.HasOne("MoneyScope.Domain.AccessProfile.Profile", "Profile")
                        .WithMany("ProfilesUsers")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoneyScope.Domain.User", "User")
                        .WithMany("ProfilesUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyScope.Domain.AccessProfile.Module", b =>
                {
                    b.Navigation("ProfilesModules");
                });

            modelBuilder.Entity("MoneyScope.Domain.AccessProfile.Profile", b =>
                {
                    b.Navigation("ProfilesModules");

                    b.Navigation("ProfilesUsers");
                });

            modelBuilder.Entity("MoneyScope.Domain.User", b =>
                {
                    b.Navigation("ProfilesUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
